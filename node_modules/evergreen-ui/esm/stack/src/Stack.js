import React, { useContext, memo } from 'react';
import PropTypes from 'prop-types';
import { StackingOrder } from '../../constants';
import StackingContext from './StackingContext';
var Stack = memo(function Stack(_ref) {
  var children = _ref.children,
      _ref$value = _ref.value,
      value = _ref$value === void 0 ? StackingOrder.STACKING_CONTEXT : _ref$value;
  var previousValue = useContext(StackingContext);
  var currentValue = Math.max(value, previousValue);
  var nextValue = currentValue + 1;
  return React.createElement(StackingContext.Provider, {
    value: nextValue
  }, children(currentValue));
});
Stack.propTypes = {
  /**
   * Function that takes the current z-index and returns a React Node.
   * (zIndex) => ReactNode.
   */
  children: PropTypes.func.isRequired,

  /**
   * Set the value of the stack. This will increment for children.
   */
  value: PropTypes.number
};
export default Stack;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdGFjay9zcmMvU3RhY2suanMiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VDb250ZXh0IiwibWVtbyIsIlByb3BUeXBlcyIsIlN0YWNraW5nT3JkZXIiLCJTdGFja2luZ0NvbnRleHQiLCJTdGFjayIsImNoaWxkcmVuIiwidmFsdWUiLCJTVEFDS0lOR19DT05URVhUIiwicHJldmlvdXNWYWx1ZSIsImN1cnJlbnRWYWx1ZSIsIk1hdGgiLCJtYXgiLCJuZXh0VmFsdWUiLCJwcm9wVHlwZXMiLCJmdW5jIiwiaXNSZXF1aXJlZCIsIm51bWJlciJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsS0FBUCxJQUFnQkMsVUFBaEIsRUFBNEJDLElBQTVCLFFBQXdDLE9BQXhDO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixZQUF0QjtBQUNBLFNBQVNDLGFBQVQsUUFBOEIsaUJBQTlCO0FBQ0EsT0FBT0MsZUFBUCxNQUE0QixtQkFBNUI7QUFFQSxJQUFNQyxLQUFLLEdBQUdKLElBQUksQ0FBQyxTQUFTSSxLQUFULE9BR2hCO0FBQUEsTUFGREMsUUFFQyxRQUZEQSxRQUVDO0FBQUEsd0JBRERDLEtBQ0M7QUFBQSxNQUREQSxLQUNDLDJCQURPSixhQUFhLENBQUNLLGdCQUNyQjtBQUNELE1BQU1DLGFBQWEsR0FBR1QsVUFBVSxDQUFDSSxlQUFELENBQWhDO0FBQ0EsTUFBTU0sWUFBWSxHQUFHQyxJQUFJLENBQUNDLEdBQUwsQ0FBU0wsS0FBVCxFQUFnQkUsYUFBaEIsQ0FBckI7QUFDQSxNQUFNSSxTQUFTLEdBQUdILFlBQVksR0FBRyxDQUFqQztBQUVBLFNBQ0Usb0JBQUMsZUFBRCxDQUFpQixRQUFqQjtBQUEwQixJQUFBLEtBQUssRUFBRUc7QUFBakMsS0FDR1AsUUFBUSxDQUFDSSxZQUFELENBRFgsQ0FERjtBQUtELENBYmlCLENBQWxCO0FBZUFMLEtBQUssQ0FBQ1MsU0FBTixHQUFrQjtBQUNoQjs7OztBQUlBUixFQUFBQSxRQUFRLEVBQUVKLFNBQVMsQ0FBQ2EsSUFBVixDQUFlQyxVQUxUOztBQU9oQjs7O0FBR0FULEVBQUFBLEtBQUssRUFBRUwsU0FBUyxDQUFDZTtBQVZELENBQWxCO0FBYUEsZUFBZVosS0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VDb250ZXh0LCBtZW1vIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBTdGFja2luZ09yZGVyIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzJ1xuaW1wb3J0IFN0YWNraW5nQ29udGV4dCBmcm9tICcuL1N0YWNraW5nQ29udGV4dCdcblxuY29uc3QgU3RhY2sgPSBtZW1vKGZ1bmN0aW9uIFN0YWNrKHtcbiAgY2hpbGRyZW4sXG4gIHZhbHVlID0gU3RhY2tpbmdPcmRlci5TVEFDS0lOR19DT05URVhUXG59KSB7XG4gIGNvbnN0IHByZXZpb3VzVmFsdWUgPSB1c2VDb250ZXh0KFN0YWNraW5nQ29udGV4dClcbiAgY29uc3QgY3VycmVudFZhbHVlID0gTWF0aC5tYXgodmFsdWUsIHByZXZpb3VzVmFsdWUpXG4gIGNvbnN0IG5leHRWYWx1ZSA9IGN1cnJlbnRWYWx1ZSArIDFcblxuICByZXR1cm4gKFxuICAgIDxTdGFja2luZ0NvbnRleHQuUHJvdmlkZXIgdmFsdWU9e25leHRWYWx1ZX0+XG4gICAgICB7Y2hpbGRyZW4oY3VycmVudFZhbHVlKX1cbiAgICA8L1N0YWNraW5nQ29udGV4dC5Qcm92aWRlcj5cbiAgKVxufSlcblxuU3RhY2sucHJvcFR5cGVzID0ge1xuICAvKipcbiAgICogRnVuY3Rpb24gdGhhdCB0YWtlcyB0aGUgY3VycmVudCB6LWluZGV4IGFuZCByZXR1cm5zIGEgUmVhY3QgTm9kZS5cbiAgICogKHpJbmRleCkgPT4gUmVhY3ROb2RlLlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWQsXG5cbiAgLyoqXG4gICAqIFNldCB0aGUgdmFsdWUgb2YgdGhlIHN0YWNrLiBUaGlzIHdpbGwgaW5jcmVtZW50IGZvciBjaGlsZHJlbi5cbiAgICovXG4gIHZhbHVlOiBQcm9wVHlwZXMubnVtYmVyXG59XG5cbmV4cG9ydCBkZWZhdWx0IFN0YWNrXG4iXX0=