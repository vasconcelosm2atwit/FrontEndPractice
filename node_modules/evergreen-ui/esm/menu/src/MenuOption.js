import _extends from "@babel/runtime/helpers/esm/extends";
import React, { memo, useCallback } from 'react';
import PropTypes from 'prop-types';
import { Pane } from '../../layers';
import { Text } from '../../typography';
import { TickIcon } from '../../icons';
import { useTheme } from '../../theme';

var noop = function noop() {};

var MenuOption = memo(function MenuOption(props) {
  var id = props.id,
      children = props.children,
      _props$appearance = props.appearance,
      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,
      _props$onSelect = props.onSelect,
      onSelect = _props$onSelect === void 0 ? noop : _props$onSelect,
      secondaryText = props.secondaryText,
      _props$isSelected = props.isSelected,
      isSelected = _props$isSelected === void 0 ? false : _props$isSelected;
  var handleClick = useCallback(function (e) {
    return onSelect(e);
  }, [onSelect]);
  var handleKeyPress = useCallback(function (e) {
    if (e.key === 'Enter' || e.key === ' ') {
      onSelect(e);
      e.preventDefault();
    }
  }, [onSelect]);
  var theme = useTheme();
  var themedClassName = theme.getMenuItemClassName(appearance, 'none');
  var textProps = isSelected ? {
    color: 'selected',
    fontWeight: 500,
    marginLeft: 16
  } : {
    marginLeft: 44
  };
  return React.createElement(Pane, {
    id: id,
    role: "menuitemradio",
    tabIndex: 0,
    className: themedClassName,
    onClick: handleClick,
    onKeyPress: handleKeyPress,
    "data-isselectable": "true",
    "aria-checked": isSelected,
    height: 40,
    display: "flex",
    alignItems: "center"
  }, isSelected && React.createElement(TickIcon, {
    "aria-hidden": true,
    color: "selected",
    marginLeft: 16,
    marginRight: -4,
    size: 16,
    flexShrink: 0
  }), React.createElement(Text, _extends({}, textProps, {
    marginRight: 16,
    flex: 1
  }), children), secondaryText && React.createElement(Text, {
    marginRight: 16,
    color: "muted"
  }, secondaryText));
});
MenuOption.propTypes = {
  /**
   * The id attribute of the menu option.
   */
  id: PropTypes.string,

  /**
   * Function that is called on click and enter/space keypress.
   */
  onSelect: PropTypes.func,

  /**
   * The icon before the label.
   */
  isSelected: PropTypes.bool,

  /**
   * The children of the component.
   */
  children: PropTypes.node,

  /**
   * Secondary text shown on the right.
   */
  secondaryText: PropTypes.node,

  /**
   * The default theme only supports one default appearance.
   */
  appearance: PropTypes.string
};
export default MenuOption;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tZW51L3NyYy9NZW51T3B0aW9uLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwibWVtbyIsInVzZUNhbGxiYWNrIiwiUHJvcFR5cGVzIiwiUGFuZSIsIlRleHQiLCJUaWNrSWNvbiIsInVzZVRoZW1lIiwibm9vcCIsIk1lbnVPcHRpb24iLCJwcm9wcyIsImlkIiwiY2hpbGRyZW4iLCJhcHBlYXJhbmNlIiwib25TZWxlY3QiLCJzZWNvbmRhcnlUZXh0IiwiaXNTZWxlY3RlZCIsImhhbmRsZUNsaWNrIiwiZSIsImhhbmRsZUtleVByZXNzIiwia2V5IiwicHJldmVudERlZmF1bHQiLCJ0aGVtZSIsInRoZW1lZENsYXNzTmFtZSIsImdldE1lbnVJdGVtQ2xhc3NOYW1lIiwidGV4dFByb3BzIiwiY29sb3IiLCJmb250V2VpZ2h0IiwibWFyZ2luTGVmdCIsInByb3BUeXBlcyIsInN0cmluZyIsImZ1bmMiLCJib29sIiwibm9kZSJdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLElBQWhCLEVBQXNCQyxXQUF0QixRQUF5QyxPQUF6QztBQUNBLE9BQU9DLFNBQVAsTUFBc0IsWUFBdEI7QUFDQSxTQUFTQyxJQUFULFFBQXFCLGNBQXJCO0FBQ0EsU0FBU0MsSUFBVCxRQUFxQixrQkFBckI7QUFDQSxTQUFTQyxRQUFULFFBQXlCLGFBQXpCO0FBQ0EsU0FBU0MsUUFBVCxRQUF5QixhQUF6Qjs7QUFFQSxJQUFNQyxJQUFJLEdBQUcsU0FBUEEsSUFBTyxHQUFNLENBQUUsQ0FBckI7O0FBRUEsSUFBTUMsVUFBVSxHQUFHUixJQUFJLENBQUMsU0FBU1EsVUFBVCxDQUFvQkMsS0FBcEIsRUFBMkI7QUFBQSxNQUUvQ0MsRUFGK0MsR0FRN0NELEtBUjZDLENBRS9DQyxFQUYrQztBQUFBLE1BRy9DQyxRQUgrQyxHQVE3Q0YsS0FSNkMsQ0FHL0NFLFFBSCtDO0FBQUEsMEJBUTdDRixLQVI2QyxDQUkvQ0csVUFKK0M7QUFBQSxNQUkvQ0EsVUFKK0Ms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Q0FBQzJCO0FBN0JELENBQXZCO0FBZ0NBLGVBQWVyQixVQUFmIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IG1lbW8sIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBQYW5lIH0gZnJvbSAnLi4vLi4vbGF5ZXJzJ1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJy4uLy4uL3R5cG9ncmFwaHknXG5pbXBvcnQgeyBUaWNrSWNvbiB9IGZyb20gJy4uLy4uL2ljb25zJ1xuaW1wb3J0IHsgdXNlVGhlbWUgfSBmcm9tICcuLi8uLi90aGVtZSdcblxuY29uc3Qgbm9vcCA9ICgpID0+IHt9XG5cbmNvbnN0IE1lbnVPcHRpb24gPSBtZW1vKGZ1bmN0aW9uIE1lbnVPcHRpb24ocHJvcHMpIHtcbiAgY29uc3Qge1xuICAgIGlkLFxuICAgIGNoaWxkcmVuLFxuICAgIGFwcGVhcmFuY2UgPSAnZGVmYXVsdCcsXG4gICAgb25TZWxlY3QgPSBub29wLFxuICAgIHNlY29uZGFyeVRleHQsXG4gICAgaXNTZWxlY3RlZCA9IGZhbHNlXG4gIH0gPSBwcm9wc1xuXG4gIGNvbnN0IGhhbmRsZUNsaWNrID0gdXNlQ2FsbGJhY2soZSA9PiBvblNlbGVjdChlKSwgW29uU2VsZWN0XSlcblxuICBjb25zdCBoYW5kbGVLZXlQcmVzcyA9IHVzZUNhbGxiYWNrKFxuICAgIGUgPT4ge1xuICAgICAgaWYgKGUua2V5ID09PSAnRW50ZXInIHx8IGUua2V5ID09PSAnICcpIHtcbiAgICAgICAgb25TZWxlY3QoZSlcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gICAgICB9XG4gICAgfSxcbiAgICBbb25TZWxlY3RdXG4gIClcblxuICBjb25zdCB0aGVtZSA9IHVzZVRoZW1lKClcbiAgY29uc3QgdGhlbWVkQ2xhc3NOYW1lID0gdGhlbWUuZ2V0TWVudUl0ZW1DbGFzc05hbWUoYXBwZWFyYW5jZSwgJ25vbmUnKVxuXG4gIGNvbnN0IHRleHRQcm9wcyA9IGlzU2VsZWN0ZWRcbiAgICA/IHtcbiAgICAgICAgY29sb3I6ICdzZWxlY3RlZCcsXG4gICAgICAgIGZvbnRXZWlnaHQ6IDUwMCxcbiAgICAgICAgbWFyZ2luTGVmdDogMTZcbiAgICAgIH1cbiAgICA6IHsgbWFyZ2luTGVmdDogNDQgfVxuXG4gIHJldHVybiAoXG4gICAgPFBhbmVcbiAgICAgIGlkPXtpZH1cbiAgICAgIHJvbGU9XCJtZW51aXRlbXJhZGlvXCJcbiAgICAgIHRhYkluZGV4PXswfVxuICAgICAgY2xhc3NOYW1lPXt0aGVtZWRDbGFzc05hbWV9XG4gICAgICBvbkNsaWNrPXtoYW5kbGVDbGlja31cbiAgICAgIG9uS2V5UHJlc3M9e2hhbmRsZUtleVByZXNzfVxuICAgICAgZGF0YS1pc3NlbGVjdGFibGU9XCJ0cnVlXCJcbiAgICAgIGFyaWEtY2hlY2tlZD17aXNTZWxlY3RlZH1cbiAgICAgIGhlaWdodD17NDB9XG4gICAgICBkaXNwbGF5PVwiZmxleFwiXG4gICAgICBhbGlnbkl0ZW1zPVwiY2VudGVyXCJcbiAgICA+XG4gICAgICB7aXNTZWxlY3RlZCAmJiAoXG4gICAgICAgIDxUaWNrSWNvblxuICAgICAgICAgIGFyaWEtaGlkZGVuXG4gICAgICAgICAgY29sb3I9XCJzZWxlY3RlZFwiXG4gICAgICAgICAgbWFyZ2luTGVmdD17MTZ9XG4gICAgICAgICAgbWFyZ2luUmlnaHQ9ey00fVxuICAgICAgICAgIHNpemU9ezE2fVxuICAgICAgICAgIGZsZXhTaHJpbms9ezB9XG4gICAgICAgIC8+XG4gICAgICApfVxuICAgICAgPFRleHQgey4uLnRleHRQcm9wc30gbWFyZ2luUmlnaHQ9ezE2fSBmbGV4PXsxfT5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9UZXh0PlxuICAgICAge3NlY29uZGFyeVRleHQgJiYgKFxuICAgICAgICA8VGV4dCBtYXJnaW5SaWdodD17MTZ9IGNvbG9yPVwibXV0ZWRcIj5cbiAgICAgICAgICB7c2Vjb25kYXJ5VGV4dH1cbiAgICAgICAgPC9UZXh0PlxuICAgICAgKX1cbiAgICA8L1BhbmU+XG4gIClcbn0pXG5cbk1lbnVPcHRpb24ucHJvcFR5cGVzID0ge1xuICAvKipcbiAgICogVGhlIGlkIGF0dHJpYnV0ZSBvZiB0aGUgbWVudSBvcHRpb24uXG4gICAqL1xuICBpZDogUHJvcFR5cGVzLnN0cmluZyxcblxuICAvKipcbiAgICogRnVuY3Rpb24gdGhhdCBpcyBjYWxsZWQgb24gY2xpY2sgYW5kIGVudGVyL3NwYWNlIGtleXByZXNzLlxuICAgKi9cbiAgb25TZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxuXG4gIC8qKlxuICAgKiBUaGUgaWNvbiBiZWZvcmUgdGhlIGxhYmVsLlxuICAgKi9cbiAgaXNTZWxlY3RlZDogUHJvcFR5cGVzLmJvb2wsXG5cbiAgLyoqXG4gICAqIFRoZSBjaGlsZHJlbiBvZiB0aGUgY29tcG9uZW50LlxuICAgKi9cbiAgY2hpbGRyZW46IFByb3BUeXBlcy5ub2RlLFxuXG4gIC8qKlxuICAgKiBTZWNvbmRhcnkgdGV4dCBzaG93biBvbiB0aGUgcmlnaHQuXG4gICAqL1xuICBzZWNvbmRhcnlUZXh0OiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogVGhlIGRlZmF1bHQgdGhlbWUgb25seSBzdXBwb3J0cyBvbmUgZGVmYXVsdCBhcHBlYXJhbmNlLlxuICAgKi9cbiAgYXBwZWFyYW5jZTogUHJvcFR5cGVzLnN0cmluZ1xufVxuXG5leHBvcnQgZGVmYXVsdCBNZW51T3B0aW9uXG4iXX0=