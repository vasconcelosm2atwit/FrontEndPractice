import React, { memo, forwardRef } from 'react';
import PropTypes from 'prop-types';
import { Pane } from '../../layers';
import { Heading } from '../../typography';
import MenuOption from './MenuOption';
var MenuOptionsGroup = memo(forwardRef(function MenuOptionsGroup(props, ref) {
  var title = props.title,
      options = props.options,
      selected = props.selected,
      onChange = props.onChange;
  return React.createElement(Pane, {
    ref: ref,
    paddingY: 8
  }, title && React.createElement(Heading, {
    size: 100,
    marginLeft: 44,
    marginRight: 16,
    marginY: 8
  }, title), React.createElement(Pane, null, options.map(function (option) {
    return React.createElement(MenuOption, {
      key: option.value,
      isSelected: option.value === selected,
      onSelect: function onSelect() {
        return onChange(option.value);
      }
    }, option.label);
  })));
}));
MenuOptionsGroup.propTypes = {
  /**
   * Title of the menu group.
   */
  title: PropTypes.node,

  /**
   * The current value of the option group.
   */
  selected: PropTypes.any,

  /**
   * Function called when selection changes.
   */
  onChange: PropTypes.func,

  /**
   * List of options rendered in the group.
   */
  options: PropTypes.array
};
export default MenuOptionsGroup;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9tZW51L3NyYy9NZW51T3B0aW9uc0dyb3VwLmpzIl0sIm5hbWVzIjpbIlJlYWN0IiwibWVtbyIsImZvcndhcmRSZWYiLCJQcm9wVHlwZXMiLCJQYW5lIiwiSGVhZGluZyIsIk1lbnVPcHRpb24iLCJNZW51T3B0aW9uc0dyb3VwIiwicHJvcHMiLCJyZWYiLCJ0aXRsZSIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsIm9uQ2hhbmdlIiwibWFwIiwib3B0aW9uIiwidmFsdWUiLCJsYWJlbCIsInByb3BUeXBlcyIsIm5vZGUiLCJhbnkiLCJmdW5jIiwiYXJyYXkiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLElBQWhCLEVBQXNCQyxVQUF0QixRQUF3QyxPQUF4QztBQUNBLE9BQU9DLFNBQVAsTUFBc0IsWUFBdEI7QUFDQSxTQUFTQyxJQUFULFFBQXFCLGNBQXJCO0FBQ0EsU0FBU0MsT0FBVCxRQUF3QixrQkFBeEI7QUFDQSxPQUFPQyxVQUFQLE1BQXVCLGNBQXZCO0FBRUEsSUFBTUMsZ0JBQWdCLEdBQUdOLElBQUksQ0FDM0JDLFVBQVUsQ0FBQyxTQUFTSyxnQkFBVCxDQUEwQkMsS0FBMUIsRUFBaUNDLEdBQWpDLEVBQXNDO0FBQUEsTUFDdkNDLEtBRHVDLEdBQ0FGLEtBREEsQ0FDdkNFLEtBRHVDO0FBQUEsTUFDaENDLE9BRGdDLEdBQ0FILEtBREEsQ0FDaENHLE9BRGdDO0FBQUEsTUFDdkJDLFFBRHVCLEdBQ0FKLEtBREEsQ0FDdkJJLFFBRHVCO0FBQUEsTUFDYkMsUUFEYSxHQUNBTCxLQURBLENBQ2JLLFFBRGE7QUFHL0MsU0FDRSxvQkFBQyxJQUFEO0FBQU0sSUFBQSxHQUFHLEVBQUVKLEdBQVg7QUFBZ0IsSUFBQSxRQUFRLEVBQUU7QUFBMUIsS0FDR0MsS0FBSyxJQUNKLG9CQUFDLE9BQUQ7QUFBUyxJQUFBLElBQUksRUFBRSxHQUFmO0FBQW9CLElBQUEsVUFBVSxFQUFFLEVBQWhDO0FBQW9DLElBQUEsV0FBVyxFQUFFLEVBQWpEO0FBQXFELElBQUEsT0FBTyxFQUFFO0FBQTlELEtBQ0dBLEtBREgsQ0FGSixFQU1FLG9CQUFDLElBQUQsUUFDR0MsT0FBTyxDQUFDRyxHQUFSLENBQVksVUFBQUMsTUFBTSxFQUFJO0FBQ3JCLFdBQ0Usb0JBQUMsVUFBRDtBQUNFLE1BQUEsR0FBRyxFQUFFQSxNQUFNLENBQUNDLEtBRGQ7QUFFRSxNQUFBLFVBQVUsRUFBRUQsTUFBTSxDQUFDQyxLQUFQLEtBQWlCSixRQUYvQjtBQUdFLE1BQUEsUUFBUSxFQUFFO0FBQUEsZUFBTUMsUUFBUSxDQUFDRSxNQUFNLENBQUNDLEtBQVIsQ0FBZDtBQUFBO0FBSFosT0FLR0QsTUFBTSxDQUFDRSxLQUxWLENBREY7QUFTRCxHQVZBLENBREgsQ0FORixDQURGO0FBc0JELENBekJTLENBRGlCLENBQTdCO0FBNkJBVixnQkFBZ0IsQ0FBQ1csU0FBakIsR0FBNkI7QUFDM0I7OztBQUdBUixFQUFBQSxLQUFLLEVBQUVQLFNBQVMsQ0FBQ2dCLElBSlU7O0FBTTNCOzs7QUFHQVAsRUFBQUEsUUFBUSxFQUFFVCxTQUFTLENBQUNpQixHQVRPOztBQVczQjs7O0FBR0FQLEVBQUFBLFFBQVEsRUFBRVYsU0FBUyxDQUFDa0IsSUFkTzs7QUFnQjNCOzs7QUFHQVYsRUFBQUEsT0FBTyxFQUFFUixTQUFTLENBQUNtQjtBQW5CUSxDQUE3QjtBQXNCQSxlQUFlZixnQkFBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBtZW1vLCBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgeyBQYW5lIH0gZnJvbSAnLi4vLi4vbGF5ZXJzJ1xuaW1wb3J0IHsgSGVhZGluZyB9IGZyb20gJy4uLy4uL3R5cG9ncmFwaHknXG5pbXBvcnQgTWVudU9wdGlvbiBmcm9tICcuL01lbnVPcHRpb24nXG5cbmNvbnN0IE1lbnVPcHRpb25zR3JvdXAgPSBtZW1vKFxuICBmb3J3YXJkUmVmKGZ1bmN0aW9uIE1lbnVPcHRpb25zR3JvdXAocHJvcHMsIHJlZikge1xuICAgIGNvbnN0IHsgdGl0bGUsIG9wdGlvbnMsIHNlbGVjdGVkLCBvbkNoYW5nZSB9ID0gcHJvcHNcblxuICAgIHJldHVybiAoXG4gICAgICA8UGFuZSByZWY9e3JlZn0gcGFkZGluZ1k9ezh9PlxuICAgICAgICB7dGl0bGUgJiYgKFxuICAgICAgICAgIDxIZWFkaW5nIHNpemU9ezEwMH0gbWFyZ2luTGVmdD17NDR9IG1hcmdpblJpZ2h0PXsxNn0gbWFyZ2luWT17OH0+XG4gICAgICAgICAgICB7dGl0bGV9XG4gICAgICAgICAgPC9IZWFkaW5nPlxuICAgICAgICApfVxuICAgICAgICA8UGFuZT5cbiAgICAgICAgICB7b3B0aW9ucy5tYXAob3B0aW9uID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgIDxNZW51T3B0aW9uXG4gICAgICAgICAgICAgICAga2V5PXtvcHRpb24udmFsdWV9XG4gICAgICAgICAgICAgICAgaXNTZWxlY3RlZD17b3B0aW9uLnZhbHVlID09PSBzZWxlY3RlZH1cbiAgICAgICAgICAgICAgICBvblNlbGVjdD17KCkgPT4gb25DaGFuZ2Uob3B0aW9uLnZhbHVlKX1cbiAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtvcHRpb24ubGFiZWx9XG4gICAgICAgICAgICAgIDwvTWVudU9wdGlvbj5cbiAgICAgICAgICAgIClcbiAgICAgICAgICB9KX1cbiAgICAgICAgPC9QYW5lPlxuICAgICAgPC9QYW5lPlxuICAgIClcbiAgfSlcbilcblxuTWVudU9wdGlvbnNHcm91cC5wcm9wVHlwZXMgPSB7XG4gIC8qKlxuICAgKiBUaXRsZSBvZiB0aGUgbWVudSBncm91cC5cbiAgICovXG4gIHRpdGxlOiBQcm9wVHlwZXMubm9kZSxcblxuICAvKipcbiAgICogVGhlIGN1cnJlbnQgdmFsdWUgb2YgdGhlIG9wdGlvbiBncm91cC5cbiAgICovXG4gIHNlbGVjdGVkOiBQcm9wVHlwZXMuYW55LFxuXG4gIC8qKlxuICAgKiBGdW5jdGlvbiBjYWxsZWQgd2hlbiBzZWxlY3Rpb24gY2hhbmdlcy5cbiAgICovXG4gIG9uQ2hhbmdlOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogTGlzdCBvZiBvcHRpb25zIHJlbmRlcmVkIGluIHRoZSBncm91cC5cbiAgICovXG4gIG9wdGlvbnM6IFByb3BUeXBlcy5hcnJheVxufVxuXG5leHBvcnQgZGVmYXVsdCBNZW51T3B0aW9uc0dyb3VwXG4iXX0=