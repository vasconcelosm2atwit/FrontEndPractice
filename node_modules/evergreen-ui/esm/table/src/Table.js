import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { memo } from 'react';
import { Pane } from '../../layers';
import TableBody from './TableBody';
import TableVirtualBody from './TableVirtualBody';
import TableCell from './TableCell';
import TableHead from './TableHead';
import TableHeaderCell from './TableHeaderCell';
import TableRow from './TableRow';
import TextTableCell from './TextTableCell';
import TextTableHeaderCell from './TextTableHeaderCell';
import SearchTableHeaderCell from './SearchTableHeaderCell';
import EditableCell from './EditableCell';
import SelectMenuCell from './SelectMenuCell';
var Table = memo(function Table(props) {
  var children = props.children,
      rest = _objectWithoutProperties(props, ["children"]);

  return React.createElement(Pane, rest, children);
});
Table.Body = TableBody;
Table.VirtualBody = TableVirtualBody;
Table.Head = TableHead;
Table.HeaderCell = TableHeaderCell;
Table.TextHeaderCell = TextTableHeaderCell;
Table.SearchHeaderCell = SearchTableHeaderCell;
Table.Row = TableRow;
Table.Cell = TableCell;
Table.TextCell = TextTableCell;
Table.EditableCell = EditableCell;
Table.SelectMenuCell = SelectMenuCell;
Table.propTypes = _objectSpread({}, Pane.propTypes);
export default Table;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90YWJsZS9zcmMvVGFibGUuanMiXSwibmFtZXMiOlsiUmVhY3QiLCJtZW1vIiwiUGFuZSIsIlRhYmxlQm9keSIsIlRhYmxlVmlydHVhbEJvZHkiLCJUYWJsZUNlbGwiLCJUYWJsZUhlYWQiLCJUYWJsZUhlYWRlckNlbGwiLCJUYWJsZVJvdyIsIlRleHRUYWJsZUNlbGwiLCJUZXh0VGFibGVIZWFkZXJDZWxsIiwiU2VhcmNoVGFibGVIZWFkZXJDZWxsIiwiRWRpdGFibGVDZWxsIiwiU2VsZWN0TWVudUNlbGwiLCJUYWJsZSIsInByb3BzIiwiY2hpbGRyZW4iLCJyZXN0IiwiQm9keSIsIlZpcnR1YWxCb2R5IiwiSGVhZCIsIkhlYWRlckNlbGwiLCJUZXh0SGVhZGVyQ2VsbCIsIlNlYXJjaEhlYWRlckNlbGwiLCJSb3ciLCJDZWxsIiwiVGV4dENlbGwiLCJwcm9wVHlwZXMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxPQUFPQSxLQUFQLElBQWdCQyxJQUFoQixRQUE0QixPQUE1QjtBQUNBLFNBQVNDLElBQVQsUUFBcUIsY0FBckI7QUFDQSxPQUFPQyxTQUFQLE1BQXNCLGFBQXRCO0FBQ0EsT0FBT0MsZ0JBQVAsTUFBNkIsb0JBQTdCO0FBQ0EsT0FBT0MsU0FBUCxNQUFzQixhQUF0QjtBQUNBLE9BQU9DLFNBQVAsTUFBc0IsYUFBdEI7QUFDQSxPQUFPQyxlQUFQLE1BQTRCLG1CQUE1QjtBQUNBLE9BQU9DLFFBQVAsTUFBcUIsWUFBckI7QUFDQSxPQUFPQyxhQUFQLE1BQTBCLGlCQUExQjtBQUNBLE9BQU9DLG1CQUFQLE1BQWdDLHVCQUFoQztBQUNBLE9BQU9DLHFCQUFQLE1BQWtDLHlCQUFsQztBQUNBLE9BQU9DLFlBQVAsTUFBeUIsZ0JBQXpCO0FBQ0EsT0FBT0MsY0FBUCxNQUEyQixrQkFBM0I7QUFFQSxJQUFNQyxLQUFLLEdBQUdiLElBQUksQ0FBQyxTQUFTYSxLQUFULENBQWVDLEtBQWYsRUFBc0I7QUFBQSxNQUMvQkMsUUFEK0IsR0FDVEQsS0FEUyxDQUMvQkMsUUFEK0I7QUFBQSxNQUNsQkMsSUFEa0IsNEJBQ1RGLEtBRFM7O0FBRXZDLFNBQU8sb0JBQUMsSUFBRCxFQUFVRSxJQUFWLEVBQWlCRCxRQUFqQixDQUFQO0FBQ0QsQ0FIaUIsQ0FBbEI7QUFLQUYsS0FBSyxDQUFDSSxJQUFOLEdBQWFmLFNBQWI7QUFDQVcsS0FBSyxDQUFDSyxXQUFOLEdBQW9CZixnQkFBcEI7QUFDQVUsS0FBSyxDQUFDTSxJQUFOLEdBQWFkLFNBQWI7QUFDQVEsS0FBSyxDQUFDTyxVQUFOLEdBQW1CZCxlQUFuQjtBQUNBTyxLQUFLLENBQUNRLGNBQU4sR0FBdUJaLG1CQUF2QjtBQUNBSSxLQUFLLENBQUNTLGdCQUFOLEdBQXlCWixxQkFBekI7QUFDQUcsS0FBSyxDQUFDVSxHQUFOLEdBQVloQixRQUFaO0FBQ0FNLEtBQUssQ0FBQ1csSUFBTixHQUFhcEIsU0FBYjtBQUNBUyxLQUFLLENBQUNZLFFBQU4sR0FBaUJqQixhQUFqQjtBQUNBSyxLQUFLLENBQUNGLFlBQU4sR0FBcUJBLFlBQXJCO0FBQ0FFLEtBQUssQ0FBQ0QsY0FBTixHQUF1QkEsY0FBdkI7QUFFQUMsS0FBSyxDQUFDYSxTQUFOLHFCQUNLekIsSUFBSSxDQUFDeUIsU0FEVjtBQUlBLGVBQWViLEtBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgbWVtbyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgUGFuZSB9IGZyb20gJy4uLy4uL2xheWVycydcbmltcG9ydCBUYWJsZUJvZHkgZnJvbSAnLi9UYWJsZUJvZHknXG5pbXBvcnQgVGFibGVWaXJ0dWFsQm9keSBmcm9tICcuL1RhYmxlVmlydHVhbEJvZHknXG5pbXBvcnQgVGFibGVDZWxsIGZyb20gJy4vVGFibGVDZWxsJ1xuaW1wb3J0IFRhYmxlSGVhZCBmcm9tICcuL1RhYmxlSGVhZCdcbmltcG9ydCBUYWJsZUhlYWRlckNlbGwgZnJvbSAnLi9UYWJsZUhlYWRlckNlbGwnXG5pbXBvcnQgVGFibGVSb3cgZnJvbSAnLi9UYWJsZVJvdydcbmltcG9ydCBUZXh0VGFibGVDZWxsIGZyb20gJy4vVGV4dFRhYmxlQ2VsbCdcbmltcG9ydCBUZXh0VGFibGVIZWFkZXJDZWxsIGZyb20gJy4vVGV4dFRhYmxlSGVhZGVyQ2VsbCdcbmltcG9ydCBTZWFyY2hUYWJsZUhlYWRlckNlbGwgZnJvbSAnLi9TZWFyY2hUYWJsZUhlYWRlckNlbGwnXG5pbXBvcnQgRWRpdGFibGVDZWxsIGZyb20gJy4vRWRpdGFibGVDZWxsJ1xuaW1wb3J0IFNlbGVjdE1lbnVDZWxsIGZyb20gJy4vU2VsZWN0TWVudUNlbGwnXG5cbmNvbnN0IFRhYmxlID0gbWVtbyhmdW5jdGlvbiBUYWJsZShwcm9wcykge1xuICBjb25zdCB7IGNoaWxkcmVuLCAuLi5yZXN0IH0gPSBwcm9wc1xuICByZXR1cm4gPFBhbmUgey4uLnJlc3R9PntjaGlsZHJlbn08L1BhbmU+XG59KVxuXG5UYWJsZS5Cb2R5ID0gVGFibGVCb2R5XG5UYWJsZS5WaXJ0dWFsQm9keSA9IFRhYmxlVmlydHVhbEJvZHlcblRhYmxlLkhlYWQgPSBUYWJsZUhlYWRcblRhYmxlLkhlYWRlckNlbGwgPSBUYWJsZUhlYWRlckNlbGxcblRhYmxlLlRleHRIZWFkZXJDZWxsID0gVGV4dFRhYmxlSGVhZGVyQ2VsbFxuVGFibGUuU2VhcmNoSGVhZGVyQ2VsbCA9IFNlYXJjaFRhYmxlSGVhZGVyQ2VsbFxuVGFibGUuUm93ID0gVGFibGVSb3dcblRhYmxlLkNlbGwgPSBUYWJsZUNlbGxcblRhYmxlLlRleHRDZWxsID0gVGV4dFRhYmxlQ2VsbFxuVGFibGUuRWRpdGFibGVDZWxsID0gRWRpdGFibGVDZWxsXG5UYWJsZS5TZWxlY3RNZW51Q2VsbCA9IFNlbGVjdE1lbnVDZWxsXG5cblRhYmxlLnByb3BUeXBlcyA9IHtcbiAgLi4uUGFuZS5wcm9wVHlwZXNcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFibGVcbiJdfQ==