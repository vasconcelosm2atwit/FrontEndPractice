"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _uiBox = require("ui-box");

var _IconWrapper = require("../../icons/src/IconWrapper");

var _icons = require("../../icons");

var _typography = require("../../typography");

var _spinner = require("../../spinner");

var _theme = require("../../theme");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var styles = {
  position: 'relative',
  fontFamily: 'ui',
  fontWeight: 500,
  display: 'inline-flex',
  alignItems: 'center',
  flexWrap: 'nowrap'
};
var TextDropdownButton = (0, _react.memo)((0, _react.forwardRef)(function TextDropdownButton(props, ref) {
  var theme = (0, _theme.useTheme)();
  var className = props.className,
      intent = props.intent,
      height = props.height,
      _props$isActive = props.isActive,
      isActive = _props$isActive === void 0 ? false : _props$isActive,
      children = props.children,
      disabled = props.disabled,
      appearance = props.appearance,
      isLoading = props.isLoading,
      paddingRight = props.paddingRight,
      paddingLeft = props.paddingLeft,
      paddingTop = props.paddingTop,
      paddingBottom = props.paddingBottom,
      _props$icon = props.icon,
      icon = _props$icon === void 0 ? _icons.CaretDownIcon : _props$icon,
      restProps = (0, _objectWithoutProperties2["default"])(props, ["className", "intent", "height", "isActive", "children", "disabled", "appearance", "isLoading", "paddingRight", "paddingLeft", "paddingTop", "paddingBottom", "icon"]);
  var themedClassName = (0, _classnames["default"])(theme.getTextDropdownButtonClassName(), className);
  return _react["default"].createElement(_typography.Text, (0, _extends2["default"])({
    is: "button",
    ref: ref,
    className: themedClassName,
    paddingX: 4,
    marginX: -4,
    paddingY: 2,
    marginY: -2,
    size: 300,
    "data-active": isActive
  }, styles, restProps, {
    disabled: disabled
  }), isLoading && _react["default"].createElement(_spinner.Spinner, {
    marginLeft: -Math.round(height / 8),
    marginRight: Math.round(height / 4),
    size: Math.round(height / 2)
  }), children, _react["default"].createElement(_IconWrapper.IconWrapper, {
    icon: icon,
    marginLeft: 2,
    color: "default",
    size: 12
  }));
}));
TextDropdownButton.propTypes = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _uiBox.dimensions.propTypes), _uiBox.spacing.propTypes), _uiBox.position.propTypes), _uiBox.layout.propTypes), {}, {
  /**
   * Forcefully set the active state of a button.
   * Useful in conjuction with a Popover.
   */
  isActive: _propTypes["default"].bool,

  /**
   * When true, the button is disabled.
   * isLoading also sets the button to disabled.
   */
  disabled: _propTypes["default"].bool,

  /**
   * An Evergreen icon or custom icon node. By default it uses CaretDownIcon
   */
  icon: _propTypes["default"].oneOfType([_propTypes["default"].elementType, _propTypes["default"].element]),

  /**
   * Class name passed to the button.
   * Only use if you know what you are doing.
   */
  className: _propTypes["default"].string
});
var _default = TextDropdownButton;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9idXR0b25zL3NyYy9UZXh0RHJvcGRvd25CdXR0b24uanMiXSwibmFtZXMiOlsic3R5bGVzIiwicG9zaXRpb24iLCJmb250RmFtaWx5IiwiZm9udFdlaWdodCIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwiZmxleFdyYXAiLCJUZXh0RHJvcGRvd25CdXR0b24iLCJwcm9wcyIsInJlZiIsInRoZW1lIiwiY2xhc3NOYW1lIiwiaW50ZW50IiwiaGVpZ2h0IiwiaXNBY3RpdmUiLCJjaGlsZHJlbiIsImRpc2FibGVkIiwiYXBwZWFyYW5jZSIsImlzTG9hZGluZyIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdMZWZ0IiwicGFkZGluZ1RvcCIsInBhZGRpbmdCb3R0b20iLCJpY29uIiwiQ2FyZXREb3duSWNvbiIsInJlc3RQcm9wcyIsInRoZW1lZENsYXNzTmFtZSIsImdldFRleHREcm9wZG93bkJ1dHRvbkNsYXNzTmFtZSIsIk1hdGgiLCJyb3VuZCIsInByb3BUeXBlcyIsImRpbWVuc2lvbnMiLCJzcGFjaW5nIiwibGF5b3V0IiwiUHJvcFR5cGVzIiwiYm9vbCIsIm9uZU9mVHlwZSIsImVsZW1lbnRUeXBlIiwiZWxlbWVudCIsInN0cmluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7O0FBRUEsSUFBTUEsTUFBTSxHQUFHO0FBQ2JDLEVBQUFBLFFBQVEsRUFBRSxVQURHO0FBRWJDLEVBQUFBLFVBQVUsRUFBRSxJQUZDO0FBR2JDLEVBQUFBLFVBQVUsRUFBRSxHQUhDO0FBSWJDLEVBQUFBLE9BQU8sRUFBRSxhQUpJO0FBS2JDLEVBQUFBLFVBQVUsRUFBRSxRQUxDO0FBTWJDLEVBQUFBLFFBQVEsRUFBRTtBQU5HLENBQWY7QUFTQSxJQUFNQyxrQkFBa0IsR0FBRyxpQkFDekIsdUJBQVcsU0FBU0Esa0JBQVQsQ0FBNEJDLEtBQTVCLEVB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QUFwQixDQXBDUjs7QUFzQ0U7Ozs7QUFJQTNCLEVBQUFBLFNBQVMsRUFBRXVCLHNCQUFVSztBQTFDdkI7ZUE2Q2VoQyxrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBtZW1vLCBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnXG5pbXBvcnQgY3ggZnJvbSAnY2xhc3NuYW1lcydcbmltcG9ydCB7IGRpbWVuc2lvbnMsIHNwYWNpbmcsIHBvc2l0aW9uLCBsYXlvdXQgfSBmcm9tICd1aS1ib3gnXG5pbXBvcnQgeyBJY29uV3JhcHBlciB9IGZyb20gJy4uLy4uL2ljb25zL3NyYy9JY29uV3JhcHBlcidcbmltcG9ydCB7IENhcmV0RG93bkljb24gfSBmcm9tICcuLi8uLi9pY29ucydcbmltcG9ydCB7IFRleHQgfSBmcm9tICcuLi8uLi90eXBvZ3JhcGh5J1xuaW1wb3J0IHsgU3Bpbm5lciB9IGZyb20gJy4uLy4uL3NwaW5uZXInXG5pbXBvcnQgeyB1c2VUaGVtZSB9IGZyb20gJy4uLy4uL3RoZW1lJ1xuXG5jb25zdCBzdHlsZXMgPSB7XG4gIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICBmb250RmFtaWx5OiAndWknLFxuICBmb250V2VpZ2h0OiA1MDAsXG4gIGRpc3BsYXk6ICdpbmxpbmUtZmxleCcsXG4gIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICBmbGV4V3JhcDogJ25vd3JhcCdcbn1cblxuY29uc3QgVGV4dERyb3Bkb3duQnV0dG9uID0gbWVtbyhcbiAgZm9yd2FyZFJlZihmdW5jdGlvbiBUZXh0RHJvcGRvd25CdXR0b24ocHJvcHMsIHJlZikge1xuICAgIGNvbnN0IHRoZW1lID0gdXNlVGhlbWUoKVxuICAgIGNvbnN0IHtcbiAgICAgIGNsYXNzTmFtZSxcbiAgICAgIGludGVudCxcbiAgICAgIGhlaWdodCxcbiAgICAgIGlzQWN0aXZlID0gZmFsc2UsXG4gICAgICBjaGlsZHJlbixcbiAgICAgIGRpc2FibGVkLFxuICAgICAgYXBwZWFyYW5jZSxcbiAgICAgIGlzTG9hZGluZyxcblxuICAgICAgcGFkZGluZ1JpZ2h0LFxuICAgICAgcGFkZGluZ0xlZnQsXG4gICAgICBwYWRkaW5nVG9wLFxuICAgICAgcGFkZGluZ0JvdHRvbSxcblxuICAgICAgaWNvbiA9IENhcmV0RG93bkljb24sXG4gICAgICAuLi5yZXN0UHJvcHNcbiAgICB9ID0gcHJvcHNcblxuICAgIGNvbnN0IHRoZW1lZENsYXNzTmFtZSA9IGN4KHRoZW1lLmdldFRleHREcm9wZG93bkJ1dHRvbkNsYXNzTmFtZSgpLCBjbGFzc05hbWUpXG5cbiAgICByZXR1cm4gKFxuICAgICAgPFRleHRcbiAgICAgICAgaXM9XCJidXR0b25cIlxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgY2xhc3NOYW1lPXt0aGVtZWRDbGFzc05hbWV9XG4gICAgICAgIHBhZGRpbmdYPXs0fVxuICAgICAgICBtYXJnaW5YPXstNH1cbiAgICAgICAgcGFkZGluZ1k9ezJ9XG4gICAgICAgIG1hcmdpblk9ey0yfVxuICAgICAgICBzaXplPXszMDB9XG4gICAgICAgIGRhdGEtYWN0aXZlPXtpc0FjdGl2ZX1cbiAgICAgICAgey4uLnN0eWxlc31cbiAgICAgICAgey4uLnJlc3RQcm9wc31cbiAgICAgICAgZGlzYWJsZWQ9e2Rpc2FibGVkfVxuICAgICAgPlxuICAgICAgICB7aXNMb2FkaW5nICYmIChcbiAgICAgICAgICA8U3Bpbm5lclxuICAgICAgICAgICAgbWFyZ2luTGVmdD17LU1hdGgucm91bmQoaGVpZ2h0IC8gOCl9XG4gICAgICAgICAgICBtYXJnaW5SaWdodD17TWF0aC5yb3VuZChoZWlnaHQgLyA0KX1cbiAgICAgICAgICAgIHNpemU9e01hdGgucm91bmQoaGVpZ2h0IC8gMil9XG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8SWNvbldyYXBwZXIgaWNvbj17aWNvbn0gbWFyZ2luTGVmdD17Mn0gY29sb3I9XCJkZWZhdWx0XCIgc2l6ZT17MTJ9IC8+XG4gICAgICA8L1RleHQ+XG4gICAgKVxuICB9KVxuKVxuXG5UZXh0RHJvcGRvd25CdXR0b24ucHJvcFR5cGVzID0ge1xuICAvKipcbiAgICogQ29tcG9zZXMgdGhlIGRpbWVuc2lvbnMgc3BlYyBmcm9tIHRoZSBCb3ggcHJpbWl0aXZlLlxuICAgKi9cbiAgLi4uZGltZW5zaW9ucy5wcm9wVHlwZXMsXG5cbiAgLyoqXG4gICAqIENvbXBvc2VzIHRoZSBzcGFjaW5nIHNwZWMgZnJvbSB0aGUgQm94IHByaW1pdGl2ZS5cbiAgICovXG4gIC4uLnNwYWNpbmcucHJvcFR5cGVzLFxuXG4gIC8qKlxuICAgKiBDb21wb3NlcyB0aGUgcG9zaXRpb24gc3BlYyBmcm9tIHRoZSBCb3ggcHJpbWl0aXZlLlxuICAgKi9cbiAgLi4ucG9zaXRpb24ucHJvcFR5cGVzLFxuXG4gIC8qKlxuICAgKiBDb21wb3NlcyB0aGUgbGF5b3V0IHNwZWMgZnJvbSB0aGUgQm94IHByaW1pdGl2ZS5cbiAgICovXG4gIC4uLmxheW91dC5wcm9wVHlwZXMsXG5cbiAgLyoqXG4gICAqIEZvcmNlZnVsbHkgc2V0IHRoZSBhY3RpdmUgc3RhdGUgb2YgYSBidXR0b24uXG4gICAqIFVzZWZ1bCBpbiBjb25qdWN0aW9uIHdpdGggYSBQb3BvdmVyLlxuICAgKi9cbiAgaXNBY3RpdmU6IFByb3BUeXBlcy5ib29sLFxuXG4gIC8qKlxuICAgKiBXaGVuIHRydWUsIHRoZSBidXR0b24gaXMgZGlzYWJsZWQuXG4gICAqIGlzTG9hZGluZyBhbHNvIHNldHMgdGhlIGJ1dHRvbiB0byBkaXNhYmxlZC5cbiAgICovXG4gIGRpc2FibGVkOiBQcm9wVHlwZXMuYm9vbCxcblxuICAvKipcbiAgICogQW4gRXZlcmdyZWVuIGljb24gb3IgY3VzdG9tIGljb24gbm9kZS4gQnkgZGVmYXVsdCBpdCB1c2VzIENhcmV0RG93bkljb25cbiAgICovXG4gIGljb246IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5lbGVtZW50VHlwZSwgUHJvcFR5cGVzLmVsZW1lbnRdKSxcblxuICAvKipcbiAgICogQ2xhc3MgbmFtZSBwYXNzZWQgdG8gdGhlIGJ1dHRvbi5cbiAgICogT25seSB1c2UgaWYgeW91IGtub3cgd2hhdCB5b3UgYXJlIGRvaW5nLlxuICAgKi9cbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nXG59XG5cbmV4cG9ydCBkZWZhdWx0IFRleHREcm9wZG93bkJ1dHRvblxuIl19